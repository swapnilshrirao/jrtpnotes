==========
JMETER
==========

-> JMETER is a free & open source software given by Apache Organization

-> JMETER is used for performance testing

-> Performance testing means the process of verifying stability & responsiveness of the application

-> How our application is responding for different work loads we can verify using JMETER

-> Using JMETER we can create virtual users to test our application performance

-> JMETER is a java based desktop application

-> Using JMETER we can test performance of any web application

Note: We can't implement performance testing manually


What is the response time of our application for 100 users ?
What is the response time of our application for 200 users ?
What is the response time of our application for 300 users ?
What is the response time of our application for 400 users ?
What is the response time of our application for 1000 users ?

-> We need to provide application performance details to client

-> If application performance is slow then we need to troubleshoot the issue and we need to fix it.


==============
JMETER Setup
===============

1) Download JMETER software 

URL : https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.5.zip

2) Extract JMETER zip file

3) Goto JMETER bin folder and run "jmeter.bat" file  (it will open JMETER tool)


=================
Creating Test Plan
=================

1. Components of a Test Plan
A Test Plan in JMeter includes:

Thread Group: Defines the number of users (threads) and their behavior.
Sampler: Specifies the requests to send (e.g., HTTP requests).
Listener: Captures and displays the results of the test.

1) Right Click on Test plan

			- Add Threads 
			- Add Thread Group( define the number of users (threads) and test duration.)
			- Enter Thread/users count  

2) Right Click on Thread Group   (For sampler)

			- Add Sampler
				- Http Request
				- Add Server IP, Port Number, URL Pattern

3) Right Click on Thread Group (For Listerns)

			- Add Listener
				- Add View Results Tree
				- Add Summary Report
			

4) Save the test and run the test

5) Verify the results (we can change thread group count and we can test it)




==================
JMETER Best Practise
==================

-> Create the TEST in GUI mode and run the test in CLI mode


    Cmd to execute the test ::::   jmeter -n -t test-plan.jmx -l test-results.jtl

-> After test execution complete we can import JTL file into JMETER summary report to see the test results.

=================================================================
To explain the process of Creating a Test Plan in JMeter diagrammatically with an explanation, we'll cover the following:

Components of a Test Plan
Step-by-Step Explanation
Diagram Representation
Detailed Example
1. Components of a Test Plan
A Test Plan in JMeter includes:

Thread Group: Defines the number of users (threads) and their behavior.
Sampler: Specifies the requests to send (e.g., HTTP requests).
Listener: Captures and displays the results of the test.

2. Step-by-Step Explanation
Step 1: Create Test Plan
Open JMeter.
By default, a "Test Plan" node is present.
Right-click on the Test Plan → Add a Thread Group.
A Thread Group is where you define the number of users (threads) and test duration.

Step 2: Add Threads (Users)
Configure the Thread Group:
Number of Threads (Users): Represents virtual users.
Ramp-Up Period: Time to start all threads.
Loop Count: Number of times each thread will execute.

Step 3: Add Sampler
Right-click on the Thread Group → Add → Sampler → HTTP Request.
Configure the HTTP Request:
Server Name/IP: Enter the server's IP or hostname.
Port Number: Specify the port (e.g., 80 for HTTP, 443 for HTTPS).
Path (URL Pattern): Specify the endpoint (e.g., /login).

Step 4: Add Listener
Right-click on the Thread Group → Add → Listener → Choose a listener (e.g., View Results Tree, Summary Report).
Listeners display the results of the test.

Step 5: Save and Run
Save the Test Plan (File → Save).
Click the Start button (green play icon) to execute the test.
View the results in the Listeners.

Step 6: Analyze Results
Check metrics like:
Response time.
Success/Failure of requests.
Throughput.
Errors, if any.



3. Diagram Representation
Here is a visual representation of the steps:

Step 1: Test Plan Setup

[ Test Plan ]
   |
   --> [ Thread Group ]
           |
           --> [ Sampler (HTTP Request) ]
           |
           --> [ Listener (View Results Tree, Summary Report) ]


Step 2: Execution Flow
Users (Threads) --> HTTP Requests --> Server --> Listener Records Results

4. Detailed Example
Let’s create a Test Plan to simulate 10 users accessing a login page.

Configuration
Thread Group:
Number of Threads (Users): 10
Ramp-Up Period: 5 seconds
Loop Count: 1

HTTP Request:
Server Name/IP: example.com
Port: 80
Path: /login
Listeners:

View Results Tree: To view individual responses.
Summary Report: For aggregated results.

Diagrammatic Workflow
Test Plan Structure:

[ Test Plan ]
   |
   --> [ Thread Group (10 Users, Ramp-Up 5s) ]
           |
           --> [ HTTP Request (Server: example.com, Path: /login) ]
           |
           --> [ Listener: View Results Tree ]
           --> [ Listener: Summary Report ]


Execution Steps:
Users initiate HTTP Requests to /login.
The server processes the requests.
Responses are captured by the Listeners.


Output Example
View Results Tree: Displays request and response details for each user.

Summary Report:

Label           # Samples   Average   Min   Max   Error %   Throughput
/login          10          150ms     120ms 180ms  0.0%       20/sec


This diagrammatic approach and explanation guide you through creating a basic Test Plan in JMeter. 

For better visualization, tools like JMeter GUI itself or flowchart software (e.g., Lucidchart) can be used.
























